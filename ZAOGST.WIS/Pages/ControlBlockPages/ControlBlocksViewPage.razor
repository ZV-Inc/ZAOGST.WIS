@page "/controlblocksview"
@attribute [Authorize]
@inject IControlBlockService ControlBlockService
@inject NavigationManager NavigationManager

<PageTitle>Блоки управления</PageTitle>

@if (_controlBlockData == null)
{
	<div class="loading-rectangle"></div>
	<div class="loading-spinner"></div>
}
else
{
	<h3>Блоки управления на складе</h3>
	<br />
	<button @onclick=CreateNewControlBlock class="m-1 btn btn-primary" title="Добавить блок">Добавить блок</button>
	@* WARNING! THIS FUNCTIONAL FOR DEV BUILDS <div class="d-inline">|</div>
	<button @onclick=CreateRandomControlBlock class="m-1 btn btn-primary" title="Добавить блок">Добавить случайный блок</button>*@
	<br />
	<br />

	<Table TableItem="ControlBlock" Items="_controlBlockData" PageSize="15" RowClickAction="RowClick" class="table table-striped table-sm table-bordered">
		<Column TableItem="ControlBlock" Title="Тип" Field="@(x => x.Type)" Sortable="true" Filterable="true" Width="10%" />
		<Column TableItem="ControlBlock" Title="Дата отгрузки" Field="@(x => x.ShippingDate)" Sortable="true" Filterable="true" Width="20%" />
		<Column TableItem="ControlBlock" Title="Дата добавления" Field="@(x => x.DateAdded)" Sortable="true" Filterable="true" Width="20%" />
		<Pager ShowPageNumber="true"></Pager>
	</Table>
}

@code {
	private List<ControlBlock>? _controlBlockData = new();

	protected override async Task OnInitializedAsync()
	{
		await Task.Run(LoadControlBlocksData); //TODO: Приложение падает если на этом этапе пытаться перезагрузиться или перейти на другую страницу
	}

	private async void LoadControlBlocksData()
	{
		List<ControlBlock> list = await ControlBlockService.GetList();

		_controlBlockData = list.OrderBy(x => x.Id).ToList();
	}

	private void RowClick(ControlBlock controlBlock)
	{
		NavigationManager.NavigateTo($"/controlblockupdate/{controlBlock.Id}");
	}

	private void CreateNewControlBlock()
	{
		NavigationManager.NavigateTo("/controlblockcreate");
	}

	#region ONLY FOR DEV BUILD
	// private async void CreateRandomControlBlock()
	// {
	// 	Random random = new();
	// 	int lastControlBlockNumber = await ControlBlockService.GetLastNumber();

	// 	ControlBlock newControlBlock = new()
	// 		{
	// 			Number = lastControlBlockNumber + 1,
	// 			Type = $"{ControlBlockTypes.TypesList.ToList()[_random.Next(0, 3)]}/№{lastControlBlockNumber + 1}",
	// 			ShippingDate = DateTime.Now.AddDays(random.Next(1, 60)).ToShortDateString(),
	// 		};

	// 	await ControlBlockService.Create(newControlBlock);
	// 	NavigationManager.NavigateTo("/controlblocksview", true);
	// }
	#endregion
}
