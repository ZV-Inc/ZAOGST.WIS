@page "/employeesview"
@inject IJSRuntime JsRuntime
@inject IUserService UserService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = UserRoles.Admin)]

<PageTitle>Сотрудники</PageTitle>

<h3>Сотрудники</h3>

<button @onclick=CreateNewUser class="btn btn-primary">Добавить сотрудника</button>

<br />
<br />

<Table TableItem="User" Items="_userData" PageSize="15" RowClickAction="RowClick" class="table table-striped table-sm table-bordered">
	<Column TableItem="User" Title="Логин" Field="@(x => x.Username)" Sortable="true" Filterable="true" Width="10%" />
	<Column TableItem="User" Title="Роль" Field="@(x => x.Role)" Sortable="true" Filterable="true" Width="10%" />
	<Column TableItem="User" Title="Дата добавления" Field="@(x => x.DateAdded)" Sortable="true" Filterable="true" Width="20%" />
	<Pager ShowPageNumber="true"></Pager>
</Table>

@code {
	private User _user = new();
	private List<User> _userData;
	private Random _random = new();

	protected override async Task OnInitializedAsync()
	{
		await UserService.Load();
		_userData = UserService.Users.OrderBy(x=>x.Id).ToList();
	}

	private void RowClick(User user)
	{
		NavigationManager.NavigateTo($"/employeeupdate/{user.Id}");
	}

	private void CreateNewUser()
	{
		NavigationManager.NavigateTo("/employeecreate");
	}
}
