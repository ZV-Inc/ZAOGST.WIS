@page "/shipmentsview"
@inject IShippedControlBlockService ShippedControlBlockService
@inject NavigationManager NavigationManager

<PageTitle>Отгрузка</PageTitle>

@if (_shippedControlBlocksData == null)
{
	<div class="loading-rectangle"></div>
	<div class="loading-spinner"></div>
}
else
{
	<h3>Блоки управления на отгрузку</h3>
	<br />
	<br />
	<a href="sendedshippedcontrolblockview">Отправленные блоки</a>
	<br />
	<br />
	<Table TableItem="ShippedControlBlock" Items="_shippedControlBlocksData" PageSize="15" RowClickAction="RowClick" class="table table-striped table-sm table-bordered">
		<Column TableItem="ShippedControlBlock" Title="Тип" Field="@(x => x.Type)" Sortable="true" Filterable="true" Width="10%" />
		<Column TableItem="ShippedControlBlock" Title="Дата отгрузки" Field="@(x => x.ShippingDate)" Sortable="true" Filterable="true" Width="20%" />
		<Column TableItem="ShippedControlBlock" Title="Дата добавления" Field="@(x => x.DateAdded)" Sortable="true" Filterable="true" Width="20%" />
		<Pager ShowPageNumber="true"></Pager>
	</Table>
}

@code {
	private List<ShippedControlBlock>? _shippedControlBlocksData;

	protected override async Task OnInitializedAsync()
	{
		await Task.Run(LoadShippedControlBlocksData); //TODO: Приложение падает если на этом этапе пытаться перезагрузиться или перейти на другую страницу
	}

	private async void LoadShippedControlBlocksData()
	{
		_shippedControlBlocksData = await ShippedControlBlockService.GetNotSended();
	}

	private void RowClick(ShippedControlBlock shippedControlBlock)
	{
		NavigationManager.NavigateTo($"/shipmentupdate/{shippedControlBlock.Id}");
	}
}
