@page "/shipmentsview"
@inject IShippedControlBlockService ShippedControlBlockService
@inject NavigationManager NavigationManager

<PageTitle>Отгрузка</PageTitle>

@if (_shippedControlBlocksData == null)
{
	<div class="loading-rectangle"></div>
	<div class="loading-spinner"></div>
}
else
{
	<h3>Блоки управления на отгрузку</h3>
	<br />
	<br />
	<Table TableItem="ShippedControlBlock" Items="_shippedControlBlocksData" PageSize="15" RowClickAction="RowClick" class="table table-striped table-sm table-bordered">
		@* <Column TableItem="ShippedControlBlock" Title="№ Блока управления" Field="@(x => x.Number)" Sortable="true" Filterable="true" Width="3%" /> *@
		<Column TableItem="ShippedControlBlock" Title="Тип" Field="@(x => x.Type)" Sortable="true" Filterable="true" Width="10%" />
		<Column TableItem="ShippedControlBlock" Title="Дата отгрузки" Field="@(x => x.ShippingDate)" Sortable="true" Filterable="true" Width="20%" />
		<Column TableItem="ShippedControlBlock" Title="Дата добавления" Field="@(x => x.DateAdded)" Sortable="true" Filterable="true" Width="20%" />
		<Pager ShowPageNumber="true"></Pager>
	</Table>
}

@code {
	private ShippedControlBlock _shippedControlBlock = new();
	private ShippedControlBlock[] _shippedControlBlocksData;
	private ShippedControlBlock _selectedShippedControlBlock;

	protected override async Task OnInitializedAsync()
	{
		await Task.Run(LoadShippedControlBlocksData);
	}

	private async void LoadShippedControlBlocksData()
	{
		await ShippedControlBlockService.LoadShippedControlBlock();
		_shippedControlBlocksData = ShippedControlBlockService.ShippedControlBlocks.ToArray();
	}

	// private async Task DeleteConfirm(int id)
	// {
	// 	var system = await EmptySystemService.GetSingleEmptySystem(id);
	// 	bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", $"Вы уверены что хотите удалить \"{system.Name}\"?");

	// 	if (confirmed)
	// 	{
	// 		await EmptySystemService.DeleteEmptySystem(id);
	// 		NavigationManager.NavigateTo("controlemptysystems", true);
	// 	}
	// }

	private void RowClick(ShippedControlBlock shipment)
	{
		_selectedShippedControlBlock = shipment;
		// StateHasChanged();
		ShowShipment(_selectedShippedControlBlock.Id);
	}

	private void ShowShipment(int id)
	{
		NavigationManager.NavigateTo($"/shipmentupdate/{id}");
	}

	private async void CreateShipment()
	{
		NavigationManager.NavigateTo("/shipmentsview");
		await InvokeAsync(StateHasChanged);
	}
}
