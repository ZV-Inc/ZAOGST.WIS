@inject ILocalStorageService LocalSrorageService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="documents/uploads">Документы</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="documents/uploads">
                <span class="oi oi-document" aria-hidden="true"></span>Документация
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <hr style="color: white;" />
        </div>
        <AuthorizeView>
            <div class="nav-item px-3">
                <span style="color: white">Авторизованы как: @context.User.Identity.Name</span>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles=@UserRoles.Admin Context="inner">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="employeesview">
                    <span class="oi oi-people" aria-hidden="true"></span>Сотрудники
                </NavLink>
            </div>
        </AuthorizeView>
        <div class="nav-item px-3">
            <NavLink class="nav-link" @onclick="LogoutButton">
                <span class="oi oi-account-logout" aria-hidden="true"></span>Выйти
            </NavLink>
        </div>
    </nav>
    <AuthorizeView>
        <NotAuthorized>
            <nav class="flex-column">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="LoginButton">
                        <span class="oi oi-account-login" aria-hidden="true"></span>Войти
                    </NavLink>
                </div>
            </nav>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void LoginButton()
    {
        NavigationManager.NavigateTo("/login");
    }

    private async void LogoutButton()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        NavigationManager.NavigateTo("/", true);
    }
}
